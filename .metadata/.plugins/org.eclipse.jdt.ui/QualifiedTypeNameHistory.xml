<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.util.Objects"/>
<fullyQualifiedTypeName name="com.hcl.order.entity.Order"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
<fullyQualifiedTypeName name="com.hcl.order.entity.OrderItem"/>
<fullyQualifiedTypeName name="com.hcl.order.dao.OrderItemRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.CrossOrigin"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.hcl.order.dto.OrderItemDto"/>
<fullyQualifiedTypeName name="com.hcl.order.item.entity.OrderItem"/>
<fullyQualifiedTypeName name="java.lang.Iterable"/>
<fullyQualifiedTypeName name="com.hcl.order.item.dto.OrderItemDto"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Digits"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Positive"/>
<fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
<fullyQualifiedTypeName name="javax.validation.constraints.NotEmpty"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
<fullyQualifiedTypeName name="org.springframework.web.context.request.WebRequest"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
<fullyQualifiedTypeName name="org.springframework.validation.ObjectError"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.MethodArgumentNotValidException"/>
<fullyQualifiedTypeName name="com.hcl.order.item.exception.OrderItemsNotFoundException"/>
<fullyQualifiedTypeName name="com.hcl.order.exception.OrdersNotFoundException"/>
<fullyQualifiedTypeName name="javax.validation.Valid"/>
<fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="feign.Param"/>
<fullyQualifiedTypeName name="feign.RequestLine"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="org.springframework.dao.DataAccessException"/>
<fullyQualifiedTypeName name="java.sql.SQLException"/>
<fullyQualifiedTypeName name="com.hcl.order.item.exception.DataBaseException"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="com.hcl.order.exception.DataBaseException"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="org.apache.logging.log4j.LogManager"/>
<fullyQualifiedTypeName name="org.apache.logging.log4j.Logger"/>
<fullyQualifiedTypeName name="lombok.Setter"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
</qualifiedTypeNameHistroy>
